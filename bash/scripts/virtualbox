#!/bin/bash

# https://stackoverflow.com/questions/192249/how-do-i-parse-command-line-arguments-in-bash
# https://stackoverflow.com/questions/39252133/how-to-create-a-virtual-machine-in-ubuntu-using-command-line

# Virtualbox & Guest Additions iso Downloads
# http://download.virtualbox.org/virtualbox/

echo Setting up new Virtualbox VM
echo Initiating guided setup

# NAME
source ./names
DEFAULT_NAME=$(GetRandomName)
echo -e "\nPlease provide your new VM with a name..."
read -p "NAME ($DEFAULT_NAME): " NAME
if [[ -z "${NAME// }" ]]; then NAME=$DEFAULT_NAME; fi

# OS TYPE
DEFAULT_OS_TYPE=Linux_64
KNOWN_OS_TYPE_LIST=($(VBoxManage list ostypes | grep -E ^ID: | sed "s/^ID:\s*//g"))
function OsIsValid() {
  for os in "${KNOWN_OS_TYPE_LIST[@]}"; do
    [[ "$os" -eq "$1" ]] && return 0 
  done
  return 1
}

function InvalidOsType() {
  echo -e "\nThe OS Type you have requested is not known to the current version of Virtualbox"
  echo "Would you like to see a list of known OS Types?"
  read -p "(Y / N): " choice

  [[ "$choice" == "y" ]] && echo ${KNOWN_OS_TYPE_LIST[@]}
  SetOsType
}

function SetOsType() {
  echo -e "\nWhich TYPE of operating system will this VM be running?"
  read -p "OS TYPE ($DEFAULT_OS_TYPE): " OS_TYPE
  if [[ -z "${OS_TYPE// }" ]]; then
    OS_TYPE=$DEFAULT_OS_TYPE
  else
    $(OsIsValid $OS_TYPE)
    [[ ! -z $? ]] && InvalidOsType 
  fi
}

SetOsType

echo -e "\nCongratulations $NAME has been setup with $OS_TYPE!"
